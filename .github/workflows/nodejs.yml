name: NodeJSCI

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]

jobs:
    build:
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:11
                env:
                    POSTGRES_USER: postgresuser
                    POSTGRES_PASSWORD: postgrespassword
                    POSTGRES_DB: postgres
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        strategy:
            matrix:
                node-version: [13.9.0]

        steps:
            - uses: actions/checkout@v2
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - run: npm ci
            - run: npm run build --if-present
            - run: npm run test
              env:
                  NODE_ENV: test
                  TESTDATABASE_URL: postgres://postgresuser:postgrespassword@localhost:${{ job.services.postgres.ports[5432] }}/postgres
                  ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
                  REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
                  EMAILACCOUNT: ${{ secrets.EMAILACCOUNT }}
                  EMAILPASSWORD: ${{ secrets.EMAILPASSWORD }}
                  SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
                  REDISLABSURL: ${{ secrets.REDISLABSURL }}
                  REDISLABSPASSWORD: ${{ secrets.REDISLABSPASSWORD }}
                  VAPIDKEY_PUBLIC: ${{ secrets.VAPIDKEY_PUBLIC }}
                  VAPIDKEY_PRIVATE: ${{ secrets.VAPIDKEY_PRIVATE }}
